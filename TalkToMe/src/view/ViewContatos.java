/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import business.BusinessException;
import controller.ControllerContatos;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import model.Contato;

/**
 *
 * @author Thiago
 */
public class ViewContatos extends javax.swing.JFrame {

    private final ControllerContatos controller;
    private final Contato user;
    private final TableContatosModel tableContatosModel;

    /**
     * Creates new form Contatos
     *
     * @param user
     */
    public ViewContatos(Contato user) {
        this.controller = new ControllerContatos(this);
        this.user = user;
        this.tableContatosModel = new TableContatosModel();
        initComponents();
        this.labelNick.setText(this.user.getNick());
        this.textChave.setText(this.user.getChave());
        inicializarListaContatos();
        atualizarButtonConversar();
        if (!this.controller.iniciarServicosConexao()) {
            this.cancelarInicializacaoTela();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContatos = new javax.swing.JPanel();
        labelBemVindo = new javax.swing.JLabel();
        labelChave = new javax.swing.JLabel();
        textChave = new javax.swing.JTextField();
        labelNick = new javax.swing.JLabel();
        scrollContatos = new javax.swing.JScrollPane();
        tableContatos = new javax.swing.JTable();
        buttonAdd = new javax.swing.JButton();
        buttonConversar = new javax.swing.JButton();
        labelSincronizacao = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        labelBemVindo.setText("Bem vindo");

        labelChave.setText("Minha chave:");

        textChave.setEnabled(false);

        labelNick.setText(" ");

        tableContatos.setModel(tableContatosModel);
        tableContatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableContatosMouseReleased(evt);
            }
        });
        scrollContatos.setViewportView(tableContatos);

        buttonAdd.setText("Adicionad contato");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonConversar.setText("Conversar");
        buttonConversar.setEnabled(false);
        buttonConversar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConversarActionPerformed(evt);
            }
        });

        labelSincronizacao.setBackground(new java.awt.Color(255, 0, 0));
        labelSincronizacao.setOpaque(true);

        jLabel2.setText("Sincronização: ");

        javax.swing.GroupLayout panelContatosLayout = new javax.swing.GroupLayout(panelContatos);
        panelContatos.setLayout(panelContatosLayout);
        panelContatosLayout.setHorizontalGroup(
            panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContatosLayout.createSequentialGroup()
                        .addComponent(labelChave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textChave, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSincronizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContatosLayout.createSequentialGroup()
                        .addGroup(panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelContatosLayout.createSequentialGroup()
                                .addComponent(labelBemVindo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelNick))
                            .addGroup(panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panelContatosLayout.createSequentialGroup()
                                    .addComponent(buttonAdd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonConversar))
                                .addComponent(scrollContatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelContatosLayout.setVerticalGroup(
            panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBemVindo)
                    .addComponent(labelNick))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelChave)
                    .addComponent(textChave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSincronizacao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollContatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdd)
                    .addComponent(buttonConversar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelContatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelContatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        this.controller.adicionarContato();
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonConversarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConversarActionPerformed
        try {
            this.controller.conversar();
        } catch (BusinessException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_buttonConversarActionPerformed

    private void tableContatosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableContatosMouseReleased
        this.atualizarButtonConversar();
    }//GEN-LAST:event_tableContatosMouseReleased

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.controller.manterListaContatos();
        this.controller.finalizarConexoes();
        this.controller.manterRegistroLogin();
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonConversar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelBemVindo;
    private javax.swing.JLabel labelChave;
    private javax.swing.JLabel labelNick;
    private javax.swing.JLabel labelSincronizacao;
    private javax.swing.JPanel panelContatos;
    private javax.swing.JScrollPane scrollContatos;
    private javax.swing.JTable tableContatos;
    private javax.swing.JTextField textChave;
    // End of variables declaration//GEN-END:variables

    private void inicializarListaContatos() {
        this.controller.inicializarListaContatos(this.user);
        this.tableContatos.updateUI();
    }

    public void onContatoAdicionado(Contato contato) throws BusinessException {
        this.controller.onContatoAdicionado(contato);

        this.getListaContatos().add(contato);
        this.controller.manterListaContatos();
        this.tableContatos.updateUI();
    }

    private void atualizarButtonConversar() {
        this.buttonConversar.setEnabled(this.tableContatos.getSelectedRowCount() == 1);
    }

    public void setSincronizacao(boolean sincronizado) {
        this.labelSincronizacao.setBackground(sincronizado ? Color.GREEN : Color.RED);
    }

    public Contato getContatoUser() {
        return this.user;
    }

    public Contato getContatoSelecionado() {
        if (this.tableContatos.getSelectedRowCount() != 1) {
            return null;
        }
        int index = this.tableContatos.getSelectedRow();
        return this.tableContatosModel.getContato(index);
    }

    public List<Contato> getListaContatos() {
        return this.tableContatosModel.getListaContatos();
    }

    private void cancelarInicializacaoTela() {
        this.dispose();
    }

    class TableContatosModel implements TableModel {

        private final List<Contato> listaContatos;
        private final String[] columns = new String[]{"Chave", "Nick"};

        public TableContatosModel() {
            this.listaContatos = new ArrayList<>();
        }

        public List<Contato> getListaContatos() {
            return this.listaContatos;
        }

        @Override
        public int getRowCount() {
            return this.listaContatos.size();
        }

        @Override
        public int getColumnCount() {
            return 2;
        }

        @Override
        public String getColumnName(int columnIndex) {
            return columns[columnIndex];
        }

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            return String.class;
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Contato contato = this.listaContatos.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return contato.getChave();
                case 1:
                    return contato.getNick();
            }
            return null;
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
        }

        @Override
        public void addTableModelListener(TableModelListener l) {
        }

        @Override
        public void removeTableModelListener(TableModelListener l) {
        }

        private Contato getContato(int index) {
            return this.listaContatos.get(index);
        }
    }
}
